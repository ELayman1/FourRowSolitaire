<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="53" ignored="0" total="379" passed="326">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="3145" started-at="2017-04-13T07:29:10Z" finished-at="2017-04-13T07:29:13Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="3145" started-at="2017-04-13T07:29:10Z" finished-at="2017-04-13T07:29:13Z">
      <class name="test.CardStackTest">
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:test.CardStackTest@1e028a9]" name="beforeMethod" is-config="true" duration-ms="148" started-at="2017-04-13T00:29:10Z" finished-at="2017-04-13T00:29:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="addCard()[pri:0, instance:test.CardStackTest@1e028a9]" name="addCard" duration-ms="14" started-at="2017-04-13T00:29:10Z" finished-at="2017-04-13T00:29:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addCard -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:test.CardStackTest@1e028a9]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-04-13T00:29:10Z" finished-at="2017-04-13T00:29:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:test.CardStackTest@1e028a9]" name="beforeMethod" is-config="true" duration-ms="143" started-at="2017-04-13T00:29:10Z" finished-at="2017-04-13T00:29:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="addStack()[pri:0, instance:test.CardStackTest@1e028a9]" name="addStack" duration-ms="1" started-at="2017-04-13T00:29:11Z" finished-at="2017-04-13T00:29:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addStack -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:test.CardStackTest@1e028a9]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-04-13T00:29:11Z" finished-at="2017-04-13T00:29:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:test.CardStackTest@1e028a9]" name="beforeMethod" is-config="true" duration-ms="145" started-at="2017-04-13T00:29:11Z" finished-at="2017-04-13T00:29:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="getAvailableCards()[pri:0, instance:test.CardStackTest@1e028a9]" name="getAvailableCards" duration-ms="1" started-at="2017-04-13T00:29:11Z" finished-at="2017-04-13T00:29:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAvailableCards -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:test.CardStackTest@1e028a9]" name="beforeMethod" is-config="true" duration-ms="138" started-at="2017-04-13T00:29:11Z" finished-at="2017-04-13T00:29:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:test.CardStackTest@1e028a9]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-04-13T00:29:11Z" finished-at="2017-04-13T00:29:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="getBottom()[pri:0, instance:test.CardStackTest@1e028a9]" name="getBottom" duration-ms="1" started-at="2017-04-13T00:29:11Z" finished-at="2017-04-13T00:29:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getBottom -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:test.CardStackTest@1e028a9]" name="beforeMethod" is-config="true" duration-ms="137" started-at="2017-04-13T00:29:11Z" finished-at="2017-04-13T00:29:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:test.CardStackTest@1e028a9]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-04-13T00:29:11Z" finished-at="2017-04-13T00:29:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="getCardAtLocationint()[pri:0, instance:test.CardStackTest@1e028a9]" name="getCardAtLocationint" duration-ms="1" started-at="2017-04-13T00:29:11Z" finished-at="2017-04-13T00:29:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getCardAtLocationint -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:test.CardStackTest@1e028a9]" name="beforeMethod" is-config="true" duration-ms="136" started-at="2017-04-13T00:29:11Z" finished-at="2017-04-13T00:29:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:test.CardStackTest@1e028a9]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-04-13T00:29:11Z" finished-at="2017-04-13T00:29:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="getStackCard()[pri:0, instance:test.CardStackTest@1e028a9]" name="getStackCard" duration-ms="14" started-at="2017-04-13T00:29:11Z" finished-at="2017-04-13T00:29:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getStackCard -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:test.CardStackTest@1e028a9]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-04-13T00:29:11Z" finished-at="2017-04-13T00:29:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:test.CardStackTest@1e028a9]" name="beforeMethod" is-config="true" duration-ms="134" started-at="2017-04-13T00:29:11Z" finished-at="2017-04-13T00:29:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="getStackint()[pri:0, instance:test.CardStackTest@1e028a9]" name="getStackint" duration-ms="1" started-at="2017-04-13T00:29:11Z" finished-at="2017-04-13T00:29:11Z">
          <exception class="java.lang.ArrayIndexOutOfBoundsException">
            <message>
              <![CDATA[-1]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.ArrayIndexOutOfBoundsException: -1
	at java.util.Vector.elementData(Unknown Source)
	at java.util.Vector.get(Unknown Source)
	at FourRowSolitaire.CardStack.getCardAtLocation(CardStack.java:116)
	at FourRowSolitaire.CardStack.getStack(CardStack.java:211)
	at test.CardStackTest.getStackint(CardStackTest.java:138)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.ArrayIndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getStackint -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:test.CardStackTest@1e028a9]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-04-13T00:29:11Z" finished-at="2017-04-13T00:29:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:test.CardStackTest@1e028a9]" name="beforeMethod" is-config="true" duration-ms="137" started-at="2017-04-13T00:29:11Z" finished-at="2017-04-13T00:29:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="isEmpty()[pri:0, instance:test.CardStackTest@1e028a9]" name="isEmpty" duration-ms="0" started-at="2017-04-13T00:29:11Z" finished-at="2017-04-13T00:29:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isEmpty -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:test.CardStackTest@1e028a9]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-04-13T00:29:11Z" finished-at="2017-04-13T00:29:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:test.CardStackTest@1e028a9]" name="beforeMethod" is-config="true" duration-ms="136" started-at="2017-04-13T00:29:11Z" finished-at="2017-04-13T00:29:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="length()[pri:0, instance:test.CardStackTest@1e028a9]" name="length" duration-ms="0" started-at="2017-04-13T00:29:12Z" finished-at="2017-04-13T00:29:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- length -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:test.CardStackTest@1e028a9]" name="beforeMethod" is-config="true" duration-ms="205" started-at="2017-04-13T00:29:12Z" finished-at="2017-04-13T00:29:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:test.CardStackTest@1e028a9]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-04-13T00:29:12Z" finished-at="2017-04-13T00:29:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="peek()[pri:0, instance:test.CardStackTest@1e028a9]" name="peek" duration-ms="1" started-at="2017-04-13T00:29:12Z" finished-at="2017-04-13T00:29:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- peek -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:test.CardStackTest@1e028a9]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-04-13T00:29:12Z" finished-at="2017-04-13T00:29:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:test.CardStackTest@1e028a9]" name="beforeMethod" is-config="true" duration-ms="132" started-at="2017-04-13T00:29:12Z" finished-at="2017-04-13T00:29:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="pop()[pri:0, instance:test.CardStackTest@1e028a9]" name="pop" duration-ms="1" started-at="2017-04-13T00:29:12Z" finished-at="2017-04-13T00:29:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- pop -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:test.CardStackTest@1e028a9]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-04-13T00:29:12Z" finished-at="2017-04-13T00:29:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:test.CardStackTest@1e028a9]" name="beforeMethod" is-config="true" duration-ms="135" started-at="2017-04-13T00:29:12Z" finished-at="2017-04-13T00:29:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="popCardStack()[pri:0, instance:test.CardStackTest@1e028a9]" name="popCardStack" duration-ms="0" started-at="2017-04-13T00:29:12Z" finished-at="2017-04-13T00:29:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- popCardStack -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:test.CardStackTest@1e028a9]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-04-13T00:29:12Z" finished-at="2017-04-13T00:29:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:test.CardStackTest@1e028a9]" name="beforeMethod" is-config="true" duration-ms="131" started-at="2017-04-13T00:29:12Z" finished-at="2017-04-13T00:29:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="pushCard()[pri:0, instance:test.CardStackTest@1e028a9]" name="pushCard" duration-ms="1" started-at="2017-04-13T00:29:12Z" finished-at="2017-04-13T00:29:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- pushCard -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:test.CardStackTest@1e028a9]" name="beforeMethod" is-config="true" duration-ms="134" started-at="2017-04-13T00:29:12Z" finished-at="2017-04-13T00:29:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:test.CardStackTest@1e028a9]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-04-13T00:29:12Z" finished-at="2017-04-13T00:29:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="pushCardStack()[pri:0, instance:test.CardStackTest@1e028a9]" name="pushCardStack" duration-ms="1" started-at="2017-04-13T00:29:12Z" finished-at="2017-04-13T00:29:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- pushCardStack -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:test.CardStackTest@1e028a9]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-04-13T00:29:12Z" finished-at="2017-04-13T00:29:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:test.CardStackTest@1e028a9]" name="beforeMethod" is-config="true" duration-ms="133" started-at="2017-04-13T00:29:12Z" finished-at="2017-04-13T00:29:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="search()[pri:0, instance:test.CardStackTest@1e028a9]" name="search" duration-ms="1" started-at="2017-04-13T00:29:12Z" finished-at="2017-04-13T00:29:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- search -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:test.CardStackTest@1e028a9]" name="afterMethod" is-config="true" duration-ms="0" started-at="2017-04-13T00:29:12Z" finished-at="2017-04-13T00:29:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- test.CardStackTest -->
      <class name="test.CardTest">
        <test-method status="PASS" signature="color()[pri:0, instance:test.CardTest@10587f1]" name="color" duration-ms="0" started-at="2017-04-13T00:29:12Z" finished-at="2017-04-13T00:29:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- color -->
        <test-method status="PASS" signature="color()[pri:0, instance:test.CardTest@1063c0a]" name="color" duration-ms="0" started-at="2017-04-13T00:29:12Z" finished-at="2017-04-13T00:29:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- color -->
        <test-method status="PASS" signature="color()[pri:0, instance:test.CardTest@1084709]" name="color" duration-ms="0" started-at="2017-04-13T00:29:12Z" finished-at="2017-04-13T00:29:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- color -->
        <test-method status="PASS" signature="color()[pri:0, instance:test.CardTest@11cdd8a]" name="color" duration-ms="1" started-at="2017-04-13T00:29:12Z" finished-at="2017-04-13T00:29:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- color -->
        <test-method status="PASS" signature="color()[pri:0, instance:test.CardTest@11276c2]" name="color" duration-ms="0" started-at="2017-04-13T00:29:12Z" finished-at="2017-04-13T00:29:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- color -->
        <test-method status="PASS" signature="color()[pri:0, instance:test.CardTest@11f39f9]" name="color" duration-ms="1" started-at="2017-04-13T00:29:12Z" finished-at="2017-04-13T00:29:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- color -->
        <test-method status="PASS" signature="color()[pri:0, instance:test.CardTest@1205a84]" name="color" duration-ms="1" started-at="2017-04-13T00:29:12Z" finished-at="2017-04-13T00:29:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- color -->
        <test-method status="PASS" signature="color()[pri:0, instance:test.CardTest@121e813]" name="color" duration-ms="0" started-at="2017-04-13T00:29:12Z" finished-at="2017-04-13T00:29:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- color -->
        <test-method status="PASS" signature="color()[pri:0, instance:test.CardTest@137fd8f]" name="color" duration-ms="0" started-at="2017-04-13T00:29:12Z" finished-at="2017-04-13T00:29:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- color -->
        <test-method status="PASS" signature="color()[pri:0, instance:test.CardTest@144fc21]" name="color" duration-ms="0" started-at="2017-04-13T00:29:12Z" finished-at="2017-04-13T00:29:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- color -->
        <test-method status="PASS" signature="color()[pri:0, instance:test.CardTest@14ddd49]" name="color" duration-ms="0" started-at="2017-04-13T00:29:12Z" finished-at="2017-04-13T00:29:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- color -->
        <test-method status="PASS" signature="color()[pri:0, instance:test.CardTest@1554b06]" name="color" duration-ms="1" started-at="2017-04-13T00:29:12Z" finished-at="2017-04-13T00:29:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- color -->
        <test-method status="PASS" signature="color()[pri:0, instance:test.CardTest@14e1548]" name="color" duration-ms="0" started-at="2017-04-13T00:29:12Z" finished-at="2017-04-13T00:29:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- color -->
        <test-method status="PASS" signature="color()[pri:0, instance:test.CardTest@1660f4e]" name="color" duration-ms="1" started-at="2017-04-13T00:29:12Z" finished-at="2017-04-13T00:29:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- color -->
        <test-method status="PASS" signature="color()[pri:0, instance:test.CardTest@16eabae]" name="color" duration-ms="0" started-at="2017-04-13T00:29:12Z" finished-at="2017-04-13T00:29:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- color -->
        <test-method status="PASS" signature="color()[pri:0, instance:test.CardTest@173813a]" name="color" duration-ms="1" started-at="2017-04-13T00:29:12Z" finished-at="2017-04-13T00:29:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- color -->
        <test-method status="PASS" signature="color()[pri:0, instance:test.CardTest@176b067]" name="color" duration-ms="0" started-at="2017-04-13T00:29:12Z" finished-at="2017-04-13T00:29:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- color -->
        <test-method status="PASS" signature="color()[pri:0, instance:test.CardTest@17b7b6]" name="color" duration-ms="0" started-at="2017-04-13T00:29:12Z" finished-at="2017-04-13T00:29:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- color -->
        <test-method status="PASS" signature="color()[pri:0, instance:test.CardTest@1855c9a]" name="color" duration-ms="0" started-at="2017-04-13T00:29:12Z" finished-at="2017-04-13T00:29:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- color -->
        <test-method status="PASS" signature="color()[pri:0, instance:test.CardTest@199d22e]" name="color" duration-ms="1" started-at="2017-04-13T00:29:12Z" finished-at="2017-04-13T00:29:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- color -->
        <test-method status="PASS" signature="color()[pri:0, instance:test.CardTest@1bbf57e]" name="color" duration-ms="0" started-at="2017-04-13T00:29:12Z" finished-at="2017-04-13T00:29:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- color -->
        <test-method status="PASS" signature="color()[pri:0, instance:test.CardTest@1bfb90a]" name="color" duration-ms="1" started-at="2017-04-13T00:29:12Z" finished-at="2017-04-13T00:29:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- color -->
        <test-method status="PASS" signature="color()[pri:0, instance:test.CardTest@1be0360]" name="color" duration-ms="0" started-at="2017-04-13T00:29:12Z" finished-at="2017-04-13T00:29:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- color -->
        <test-method status="PASS" signature="color()[pri:0, instance:test.CardTest@1d7a715]" name="color" duration-ms="0" started-at="2017-04-13T00:29:12Z" finished-at="2017-04-13T00:29:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- color -->
        <test-method status="PASS" signature="color()[pri:0, instance:test.CardTest@1e2203c]" name="color" duration-ms="0" started-at="2017-04-13T00:29:12Z" finished-at="2017-04-13T00:29:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- color -->
        <test-method status="PASS" signature="color()[pri:0, instance:test.CardTest@1f13d6e]" name="color" duration-ms="0" started-at="2017-04-13T00:29:12Z" finished-at="2017-04-13T00:29:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- color -->
        <test-method status="PASS" signature="color()[pri:0, instance:test.CardTest@1faf8f2]" name="color" duration-ms="1" started-at="2017-04-13T00:29:12Z" finished-at="2017-04-13T00:29:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- color -->
        <test-method status="PASS" signature="color()[pri:0, instance:test.CardTest@1fc609f]" name="color" duration-ms="0" started-at="2017-04-13T00:29:12Z" finished-at="2017-04-13T00:29:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- color -->
        <test-method status="PASS" signature="color()[pri:0, instance:test.CardTest@24f60b]" name="color" duration-ms="0" started-at="2017-04-13T00:29:12Z" finished-at="2017-04-13T00:29:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- color -->
        <test-method status="PASS" signature="color()[pri:0, instance:test.CardTest@29daf3]" name="color" duration-ms="1" started-at="2017-04-13T00:29:12Z" finished-at="2017-04-13T00:29:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- color -->
        <test-method status="PASS" signature="color()[pri:0, instance:test.CardTest@2a67b4]" name="color" duration-ms="0" started-at="2017-04-13T00:29:12Z" finished-at="2017-04-13T00:29:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- color -->
        <test-method status="PASS" signature="color()[pri:0, instance:test.CardTest@3a4799]" name="color" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- color -->
        <test-method status="PASS" signature="color()[pri:0, instance:test.CardTest@49835d]" name="color" duration-ms="1" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- color -->
        <test-method status="PASS" signature="color()[pri:0, instance:test.CardTest@6c3152]" name="color" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- color -->
        <test-method status="PASS" signature="color()[pri:0, instance:test.CardTest@707e36]" name="color" duration-ms="1" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- color -->
        <test-method status="PASS" signature="color()[pri:0, instance:test.CardTest@6d1014]" name="color" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- color -->
        <test-method status="PASS" signature="color()[pri:0, instance:test.CardTest@709393]" name="color" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- color -->
        <test-method status="PASS" signature="color()[pri:0, instance:test.CardTest@7dc304]" name="color" duration-ms="1" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- color -->
        <test-method status="PASS" signature="color()[pri:0, instance:test.CardTest@853265]" name="color" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- color -->
        <test-method status="PASS" signature="color()[pri:0, instance:test.CardTest@8806ef]" name="color" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- color -->
        <test-method status="PASS" signature="color()[pri:0, instance:test.CardTest@883ce7]" name="color" duration-ms="1" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- color -->
        <test-method status="PASS" signature="color()[pri:0, instance:test.CardTest@94e528]" name="color" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- color -->
        <test-method status="PASS" signature="color()[pri:0, instance:test.CardTest@a7e666]" name="color" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- color -->
        <test-method status="PASS" signature="color()[pri:0, instance:test.CardTest@aa12dd]" name="color" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- color -->
        <test-method status="PASS" signature="color()[pri:0, instance:test.CardTest@b494a6]" name="color" duration-ms="1" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- color -->
        <test-method status="PASS" signature="color()[pri:0, instance:test.CardTest@b6cbcc]" name="color" duration-ms="1" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- color -->
        <test-method status="PASS" signature="color()[pri:0, instance:test.CardTest@bbe345]" name="color" duration-ms="1" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- color -->
        <test-method status="PASS" signature="color()[pri:0, instance:test.CardTest@b8a058]" name="color" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- color -->
        <test-method status="PASS" signature="color()[pri:0, instance:test.CardTest@bc05a6]" name="color" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- color -->
        <test-method status="PASS" signature="color()[pri:0, instance:test.CardTest@d2dae5]" name="color" duration-ms="1" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- color -->
        <test-method status="PASS" signature="color()[pri:0, instance:test.CardTest@ef309d]" name="color" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- color -->
        <test-method status="PASS" signature="color()[pri:0, instance:test.CardTest@fed156]" name="color" duration-ms="1" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- color -->
        <test-method status="FAIL" signature="equals()[pri:0, instance:test.CardTest@10587f1]" name="equals" duration-ms="4" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Card not .equal() to it's clone: FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=] expected [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]] but found [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Card not .equal() to it's clone: FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=] expected [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]] but found [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertEqualsImpl(Assert.java:134)
	at org.testng.Assert.assertEquals(Assert.java:115)
	at test.CardTest.equals(CardTest.java:21)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- equals -->
        <test-method status="FAIL" signature="equals()[pri:0, instance:test.CardTest@1063c0a]" name="equals" duration-ms="3" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Card not .equal() to it's clone: FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=] expected [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]] but found [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Card not .equal() to it's clone: FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=] expected [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]] but found [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertEqualsImpl(Assert.java:134)
	at org.testng.Assert.assertEquals(Assert.java:115)
	at test.CardTest.equals(CardTest.java:21)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- equals -->
        <test-method status="FAIL" signature="equals()[pri:0, instance:test.CardTest@1084709]" name="equals" duration-ms="4" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Card not .equal() to it's clone: FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=] expected [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]] but found [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Card not .equal() to it's clone: FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=] expected [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]] but found [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertEqualsImpl(Assert.java:134)
	at org.testng.Assert.assertEquals(Assert.java:115)
	at test.CardTest.equals(CardTest.java:21)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- equals -->
        <test-method status="FAIL" signature="equals()[pri:0, instance:test.CardTest@11276c2]" name="equals" duration-ms="3" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Card not .equal() to it's clone: FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=] expected [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]] but found [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Card not .equal() to it's clone: FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=] expected [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]] but found [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertEqualsImpl(Assert.java:134)
	at org.testng.Assert.assertEquals(Assert.java:115)
	at test.CardTest.equals(CardTest.java:21)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- equals -->
        <test-method status="FAIL" signature="equals()[pri:0, instance:test.CardTest@11cdd8a]" name="equals" duration-ms="3" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Card not .equal() to it's clone: FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=] expected [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]] but found [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Card not .equal() to it's clone: FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=] expected [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]] but found [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertEqualsImpl(Assert.java:134)
	at org.testng.Assert.assertEquals(Assert.java:115)
	at test.CardTest.equals(CardTest.java:21)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- equals -->
        <test-method status="FAIL" signature="equals()[pri:0, instance:test.CardTest@11f39f9]" name="equals" duration-ms="4" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Card not .equal() to it's clone: FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=] expected [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]] but found [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Card not .equal() to it's clone: FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=] expected [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]] but found [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertEqualsImpl(Assert.java:134)
	at org.testng.Assert.assertEquals(Assert.java:115)
	at test.CardTest.equals(CardTest.java:21)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- equals -->
        <test-method status="FAIL" signature="equals()[pri:0, instance:test.CardTest@1205a84]" name="equals" duration-ms="4" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Card not .equal() to it's clone: FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=] expected [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]] but found [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Card not .equal() to it's clone: FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=] expected [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]] but found [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertEqualsImpl(Assert.java:134)
	at org.testng.Assert.assertEquals(Assert.java:115)
	at test.CardTest.equals(CardTest.java:21)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- equals -->
        <test-method status="FAIL" signature="equals()[pri:0, instance:test.CardTest@121e813]" name="equals" duration-ms="3" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Card not .equal() to it's clone: FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=] expected [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]] but found [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Card not .equal() to it's clone: FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=] expected [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]] but found [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertEqualsImpl(Assert.java:134)
	at org.testng.Assert.assertEquals(Assert.java:115)
	at test.CardTest.equals(CardTest.java:21)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- equals -->
        <test-method status="FAIL" signature="equals()[pri:0, instance:test.CardTest@137fd8f]" name="equals" duration-ms="3" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Card not .equal() to it's clone: FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=] expected [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]] but found [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Card not .equal() to it's clone: FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=] expected [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]] but found [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertEqualsImpl(Assert.java:134)
	at org.testng.Assert.assertEquals(Assert.java:115)
	at test.CardTest.equals(CardTest.java:21)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- equals -->
        <test-method status="FAIL" signature="equals()[pri:0, instance:test.CardTest@144fc21]" name="equals" duration-ms="3" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Card not .equal() to it's clone: FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=] expected [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]] but found [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Card not .equal() to it's clone: FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=] expected [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]] but found [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertEqualsImpl(Assert.java:134)
	at org.testng.Assert.assertEquals(Assert.java:115)
	at test.CardTest.equals(CardTest.java:21)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- equals -->
        <test-method status="FAIL" signature="equals()[pri:0, instance:test.CardTest@14ddd49]" name="equals" duration-ms="3" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Card not .equal() to it's clone: FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=] expected [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]] but found [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Card not .equal() to it's clone: FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=] expected [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]] but found [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertEqualsImpl(Assert.java:134)
	at org.testng.Assert.assertEquals(Assert.java:115)
	at test.CardTest.equals(CardTest.java:21)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- equals -->
        <test-method status="FAIL" signature="equals()[pri:0, instance:test.CardTest@14e1548]" name="equals" duration-ms="3" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Card not .equal() to it's clone: FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=] expected [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]] but found [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Card not .equal() to it's clone: FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=] expected [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]] but found [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertEqualsImpl(Assert.java:134)
	at org.testng.Assert.assertEquals(Assert.java:115)
	at test.CardTest.equals(CardTest.java:21)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- equals -->
        <test-method status="FAIL" signature="equals()[pri:0, instance:test.CardTest@1554b06]" name="equals" duration-ms="3" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Card not .equal() to it's clone: FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=] expected [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]] but found [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Card not .equal() to it's clone: FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=] expected [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]] but found [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertEqualsImpl(Assert.java:134)
	at org.testng.Assert.assertEquals(Assert.java:115)
	at test.CardTest.equals(CardTest.java:21)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- equals -->
        <test-method status="FAIL" signature="equals()[pri:0, instance:test.CardTest@1660f4e]" name="equals" duration-ms="3" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Card not .equal() to it's clone: FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=] expected [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]] but found [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Card not .equal() to it's clone: FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=] expected [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]] but found [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertEqualsImpl(Assert.java:134)
	at org.testng.Assert.assertEquals(Assert.java:115)
	at test.CardTest.equals(CardTest.java:21)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- equals -->
        <test-method status="FAIL" signature="equals()[pri:0, instance:test.CardTest@16eabae]" name="equals" duration-ms="3" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Card not .equal() to it's clone: FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=] expected [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]] but found [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Card not .equal() to it's clone: FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=] expected [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]] but found [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertEqualsImpl(Assert.java:134)
	at org.testng.Assert.assertEquals(Assert.java:115)
	at test.CardTest.equals(CardTest.java:21)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- equals -->
        <test-method status="FAIL" signature="equals()[pri:0, instance:test.CardTest@173813a]" name="equals" duration-ms="3" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Card not .equal() to it's clone: FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=] expected [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]] but found [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Card not .equal() to it's clone: FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=] expected [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]] but found [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertEqualsImpl(Assert.java:134)
	at org.testng.Assert.assertEquals(Assert.java:115)
	at test.CardTest.equals(CardTest.java:21)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- equals -->
        <test-method status="FAIL" signature="equals()[pri:0, instance:test.CardTest@176b067]" name="equals" duration-ms="3" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Card not .equal() to it's clone: FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=] expected [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]] but found [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Card not .equal() to it's clone: FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=] expected [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]] but found [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertEqualsImpl(Assert.java:134)
	at org.testng.Assert.assertEquals(Assert.java:115)
	at test.CardTest.equals(CardTest.java:21)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- equals -->
        <test-method status="FAIL" signature="equals()[pri:0, instance:test.CardTest@17b7b6]" name="equals" duration-ms="4" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Card not .equal() to it's clone: FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=] expected [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]] but found [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Card not .equal() to it's clone: FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=] expected [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]] but found [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertEqualsImpl(Assert.java:134)
	at org.testng.Assert.assertEquals(Assert.java:115)
	at test.CardTest.equals(CardTest.java:21)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- equals -->
        <test-method status="FAIL" signature="equals()[pri:0, instance:test.CardTest@1855c9a]" name="equals" duration-ms="3" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Card not .equal() to it's clone: FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=] expected [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]] but found [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Card not .equal() to it's clone: FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=] expected [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]] but found [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertEqualsImpl(Assert.java:134)
	at org.testng.Assert.assertEquals(Assert.java:115)
	at test.CardTest.equals(CardTest.java:21)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- equals -->
        <test-method status="FAIL" signature="equals()[pri:0, instance:test.CardTest@199d22e]" name="equals" duration-ms="3" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Card not .equal() to it's clone: FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=] expected [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]] but found [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Card not .equal() to it's clone: FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=] expected [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]] but found [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertEqualsImpl(Assert.java:134)
	at org.testng.Assert.assertEquals(Assert.java:115)
	at test.CardTest.equals(CardTest.java:21)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- equals -->
        <test-method status="FAIL" signature="equals()[pri:0, instance:test.CardTest@1bbf57e]" name="equals" duration-ms="3" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Card not .equal() to it's clone: FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=] expected [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]] but found [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Card not .equal() to it's clone: FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=] expected [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]] but found [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertEqualsImpl(Assert.java:134)
	at org.testng.Assert.assertEquals(Assert.java:115)
	at test.CardTest.equals(CardTest.java:21)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- equals -->
        <test-method status="FAIL" signature="equals()[pri:0, instance:test.CardTest@1be0360]" name="equals" duration-ms="2" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Card not .equal() to it's clone: FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=] expected [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]] but found [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Card not .equal() to it's clone: FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=] expected [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]] but found [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertEqualsImpl(Assert.java:134)
	at org.testng.Assert.assertEquals(Assert.java:115)
	at test.CardTest.equals(CardTest.java:21)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- equals -->
        <test-method status="FAIL" signature="equals()[pri:0, instance:test.CardTest@1bfb90a]" name="equals" duration-ms="3" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Card not .equal() to it's clone: FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=] expected [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]] but found [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Card not .equal() to it's clone: FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=] expected [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]] but found [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertEqualsImpl(Assert.java:134)
	at org.testng.Assert.assertEquals(Assert.java:115)
	at test.CardTest.equals(CardTest.java:21)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- equals -->
        <test-method status="FAIL" signature="equals()[pri:0, instance:test.CardTest@1d7a715]" name="equals" duration-ms="3" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Card not .equal() to it's clone: FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=] expected [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]] but found [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Card not .equal() to it's clone: FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=] expected [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]] but found [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertEqualsImpl(Assert.java:134)
	at org.testng.Assert.assertEquals(Assert.java:115)
	at test.CardTest.equals(CardTest.java:21)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- equals -->
        <test-method status="FAIL" signature="equals()[pri:0, instance:test.CardTest@1e2203c]" name="equals" duration-ms="3" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Card not .equal() to it's clone: FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=] expected [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]] but found [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Card not .equal() to it's clone: FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=] expected [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]] but found [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertEqualsImpl(Assert.java:134)
	at org.testng.Assert.assertEquals(Assert.java:115)
	at test.CardTest.equals(CardTest.java:21)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- equals -->
        <test-method status="FAIL" signature="equals()[pri:0, instance:test.CardTest@1f13d6e]" name="equals" duration-ms="3" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Card not .equal() to it's clone: FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=] expected [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]] but found [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Card not .equal() to it's clone: FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=] expected [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]] but found [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertEqualsImpl(Assert.java:134)
	at org.testng.Assert.assertEquals(Assert.java:115)
	at test.CardTest.equals(CardTest.java:21)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- equals -->
        <test-method status="FAIL" signature="equals()[pri:0, instance:test.CardTest@1faf8f2]" name="equals" duration-ms="4" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Card not .equal() to it's clone: FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=] expected [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]] but found [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Card not .equal() to it's clone: FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=] expected [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]] but found [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertEqualsImpl(Assert.java:134)
	at org.testng.Assert.assertEquals(Assert.java:115)
	at test.CardTest.equals(CardTest.java:21)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- equals -->
        <test-method status="FAIL" signature="equals()[pri:0, instance:test.CardTest@1fc609f]" name="equals" duration-ms="4" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Card not .equal() to it's clone: FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=] expected [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]] but found [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Card not .equal() to it's clone: FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=] expected [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]] but found [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertEqualsImpl(Assert.java:134)
	at org.testng.Assert.assertEquals(Assert.java:115)
	at test.CardTest.equals(CardTest.java:21)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- equals -->
        <test-method status="FAIL" signature="equals()[pri:0, instance:test.CardTest@24f60b]" name="equals" duration-ms="4" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Card not .equal() to it's clone: FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=] expected [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]] but found [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Card not .equal() to it's clone: FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=] expected [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]] but found [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertEqualsImpl(Assert.java:134)
	at org.testng.Assert.assertEquals(Assert.java:115)
	at test.CardTest.equals(CardTest.java:21)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- equals -->
        <test-method status="FAIL" signature="equals()[pri:0, instance:test.CardTest@29daf3]" name="equals" duration-ms="3" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Card not .equal() to it's clone: FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=] expected [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]] but found [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Card not .equal() to it's clone: FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=] expected [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]] but found [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertEqualsImpl(Assert.java:134)
	at org.testng.Assert.assertEquals(Assert.java:115)
	at test.CardTest.equals(CardTest.java:21)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- equals -->
        <test-method status="FAIL" signature="equals()[pri:0, instance:test.CardTest@2a67b4]" name="equals" duration-ms="3" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Card not .equal() to it's clone: FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=] expected [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]] but found [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Card not .equal() to it's clone: FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=] expected [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]] but found [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertEqualsImpl(Assert.java:134)
	at org.testng.Assert.assertEquals(Assert.java:115)
	at test.CardTest.equals(CardTest.java:21)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- equals -->
        <test-method status="FAIL" signature="equals()[pri:0, instance:test.CardTest@3a4799]" name="equals" duration-ms="3" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Card not .equal() to it's clone: FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=] expected [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]] but found [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Card not .equal() to it's clone: FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=] expected [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]] but found [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertEqualsImpl(Assert.java:134)
	at org.testng.Assert.assertEquals(Assert.java:115)
	at test.CardTest.equals(CardTest.java:21)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- equals -->
        <test-method status="FAIL" signature="equals()[pri:0, instance:test.CardTest@49835d]" name="equals" duration-ms="3" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Card not .equal() to it's clone: FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=] expected [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]] but found [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Card not .equal() to it's clone: FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=] expected [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]] but found [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertEqualsImpl(Assert.java:134)
	at org.testng.Assert.assertEquals(Assert.java:115)
	at test.CardTest.equals(CardTest.java:21)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- equals -->
        <test-method status="FAIL" signature="equals()[pri:0, instance:test.CardTest@6c3152]" name="equals" duration-ms="3" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Card not .equal() to it's clone: FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=] expected [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]] but found [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Card not .equal() to it's clone: FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=] expected [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]] but found [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertEqualsImpl(Assert.java:134)
	at org.testng.Assert.assertEquals(Assert.java:115)
	at test.CardTest.equals(CardTest.java:21)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- equals -->
        <test-method status="FAIL" signature="equals()[pri:0, instance:test.CardTest@6d1014]" name="equals" duration-ms="3" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Card not .equal() to it's clone: FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=] expected [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]] but found [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Card not .equal() to it's clone: FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=] expected [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]] but found [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertEqualsImpl(Assert.java:134)
	at org.testng.Assert.assertEquals(Assert.java:115)
	at test.CardTest.equals(CardTest.java:21)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- equals -->
        <test-method status="FAIL" signature="equals()[pri:0, instance:test.CardTest@707e36]" name="equals" duration-ms="4" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Card not .equal() to it's clone: FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=] expected [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]] but found [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Card not .equal() to it's clone: FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=] expected [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]] but found [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertEqualsImpl(Assert.java:134)
	at org.testng.Assert.assertEquals(Assert.java:115)
	at test.CardTest.equals(CardTest.java:21)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- equals -->
        <test-method status="FAIL" signature="equals()[pri:0, instance:test.CardTest@709393]" name="equals" duration-ms="3" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Card not .equal() to it's clone: FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=] expected [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]] but found [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Card not .equal() to it's clone: FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=] expected [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]] but found [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertEqualsImpl(Assert.java:134)
	at org.testng.Assert.assertEquals(Assert.java:115)
	at test.CardTest.equals(CardTest.java:21)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- equals -->
        <test-method status="FAIL" signature="equals()[pri:0, instance:test.CardTest@7dc304]" name="equals" duration-ms="5" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Card not .equal() to it's clone: FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=] expected [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]] but found [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Card not .equal() to it's clone: FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=] expected [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]] but found [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertEqualsImpl(Assert.java:134)
	at org.testng.Assert.assertEquals(Assert.java:115)
	at test.CardTest.equals(CardTest.java:21)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- equals -->
        <test-method status="FAIL" signature="equals()[pri:0, instance:test.CardTest@853265]" name="equals" duration-ms="3" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Card not .equal() to it's clone: FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=] expected [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]] but found [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Card not .equal() to it's clone: FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=] expected [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]] but found [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertEqualsImpl(Assert.java:134)
	at org.testng.Assert.assertEquals(Assert.java:115)
	at test.CardTest.equals(CardTest.java:21)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- equals -->
        <test-method status="FAIL" signature="equals()[pri:0, instance:test.CardTest@8806ef]" name="equals" duration-ms="3" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Card not .equal() to it's clone: FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=] expected [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]] but found [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Card not .equal() to it's clone: FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=] expected [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]] but found [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertEqualsImpl(Assert.java:134)
	at org.testng.Assert.assertEquals(Assert.java:115)
	at test.CardTest.equals(CardTest.java:21)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- equals -->
        <test-method status="FAIL" signature="equals()[pri:0, instance:test.CardTest@883ce7]" name="equals" duration-ms="3" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Card not .equal() to it's clone: FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=] expected [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]] but found [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Card not .equal() to it's clone: FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=] expected [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]] but found [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertEqualsImpl(Assert.java:134)
	at org.testng.Assert.assertEquals(Assert.java:115)
	at test.CardTest.equals(CardTest.java:21)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- equals -->
        <test-method status="FAIL" signature="equals()[pri:0, instance:test.CardTest@94e528]" name="equals" duration-ms="3" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Card not .equal() to it's clone: FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=] expected [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]] but found [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Card not .equal() to it's clone: FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=] expected [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]] but found [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertEqualsImpl(Assert.java:134)
	at org.testng.Assert.assertEquals(Assert.java:115)
	at test.CardTest.equals(CardTest.java:21)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- equals -->
        <test-method status="FAIL" signature="equals()[pri:0, instance:test.CardTest@a7e666]" name="equals" duration-ms="13" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Card not .equal() to it's clone: FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=] expected [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]] but found [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Card not .equal() to it's clone: FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=] expected [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]] but found [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertEqualsImpl(Assert.java:134)
	at org.testng.Assert.assertEquals(Assert.java:115)
	at test.CardTest.equals(CardTest.java:21)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- equals -->
        <test-method status="FAIL" signature="equals()[pri:0, instance:test.CardTest@aa12dd]" name="equals" duration-ms="4" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Card not .equal() to it's clone: FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=] expected [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]] but found [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Card not .equal() to it's clone: FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=] expected [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]] but found [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertEqualsImpl(Assert.java:134)
	at org.testng.Assert.assertEquals(Assert.java:115)
	at test.CardTest.equals(CardTest.java:21)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- equals -->
        <test-method status="FAIL" signature="equals()[pri:0, instance:test.CardTest@b494a6]" name="equals" duration-ms="3" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Card not .equal() to it's clone: FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=] expected [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]] but found [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Card not .equal() to it's clone: FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=] expected [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]] but found [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertEqualsImpl(Assert.java:134)
	at org.testng.Assert.assertEquals(Assert.java:115)
	at test.CardTest.equals(CardTest.java:21)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- equals -->
        <test-method status="FAIL" signature="equals()[pri:0, instance:test.CardTest@b6cbcc]" name="equals" duration-ms="3" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Card not .equal() to it's clone: FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=] expected [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]] but found [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Card not .equal() to it's clone: FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=] expected [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]] but found [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertEqualsImpl(Assert.java:134)
	at org.testng.Assert.assertEquals(Assert.java:115)
	at test.CardTest.equals(CardTest.java:21)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- equals -->
        <test-method status="FAIL" signature="equals()[pri:0, instance:test.CardTest@b8a058]" name="equals" duration-ms="3" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Card not .equal() to it's clone: FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=] expected [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]] but found [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Card not .equal() to it's clone: FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=] expected [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]] but found [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertEqualsImpl(Assert.java:134)
	at org.testng.Assert.assertEquals(Assert.java:115)
	at test.CardTest.equals(CardTest.java:21)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- equals -->
        <test-method status="FAIL" signature="equals()[pri:0, instance:test.CardTest@bbe345]" name="equals" duration-ms="3" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Card not .equal() to it's clone: FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=] expected [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]] but found [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Card not .equal() to it's clone: FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=] expected [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]] but found [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertEqualsImpl(Assert.java:134)
	at org.testng.Assert.assertEquals(Assert.java:115)
	at test.CardTest.equals(CardTest.java:21)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- equals -->
        <test-method status="FAIL" signature="equals()[pri:0, instance:test.CardTest@bc05a6]" name="equals" duration-ms="3" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Card not .equal() to it's clone: FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=] expected [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]] but found [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Card not .equal() to it's clone: FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=] expected [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]] but found [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertEqualsImpl(Assert.java:134)
	at org.testng.Assert.assertEquals(Assert.java:115)
	at test.CardTest.equals(CardTest.java:21)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- equals -->
        <test-method status="FAIL" signature="equals()[pri:0, instance:test.CardTest@d2dae5]" name="equals" duration-ms="3" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Card not .equal() to it's clone: FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=] expected [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]] but found [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Card not .equal() to it's clone: FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=] expected [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]] but found [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertEqualsImpl(Assert.java:134)
	at org.testng.Assert.assertEquals(Assert.java:115)
	at test.CardTest.equals(CardTest.java:21)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- equals -->
        <test-method status="FAIL" signature="equals()[pri:0, instance:test.CardTest@ef309d]" name="equals" duration-ms="3" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Card not .equal() to it's clone: FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=] expected [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]] but found [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Card not .equal() to it's clone: FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=] expected [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]] but found [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertEqualsImpl(Assert.java:134)
	at org.testng.Assert.assertEquals(Assert.java:115)
	at test.CardTest.equals(CardTest.java:21)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- equals -->
        <test-method status="FAIL" signature="equals()[pri:0, instance:test.CardTest@fed156]" name="equals" duration-ms="4" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Card not .equal() to it's clone: FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=] expected [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]] but found [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Card not .equal() to it's clone: FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=] expected [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]] but found [FourRowSolitaire.Card[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=0,maximumSize=,minimumSize=,preferredSize=]]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertEqualsImpl(Assert.java:134)
	at org.testng.Assert.assertEquals(Assert.java:115)
	at test.CardTest.equals(CardTest.java:21)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- equals -->
        <test-method status="PASS" signature="getNumber()[pri:0, instance:test.CardTest@1063c0a]" name="getNumber" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNumber -->
        <test-method status="PASS" signature="getNumber()[pri:0, instance:test.CardTest@10587f1]" name="getNumber" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNumber -->
        <test-method status="PASS" signature="getNumber()[pri:0, instance:test.CardTest@1084709]" name="getNumber" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNumber -->
        <test-method status="PASS" signature="getNumber()[pri:0, instance:test.CardTest@11276c2]" name="getNumber" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNumber -->
        <test-method status="PASS" signature="getNumber()[pri:0, instance:test.CardTest@11cdd8a]" name="getNumber" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNumber -->
        <test-method status="PASS" signature="getNumber()[pri:0, instance:test.CardTest@11f39f9]" name="getNumber" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNumber -->
        <test-method status="PASS" signature="getNumber()[pri:0, instance:test.CardTest@137fd8f]" name="getNumber" duration-ms="1" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNumber -->
        <test-method status="PASS" signature="getNumber()[pri:0, instance:test.CardTest@1205a84]" name="getNumber" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNumber -->
        <test-method status="PASS" signature="getNumber()[pri:0, instance:test.CardTest@121e813]" name="getNumber" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNumber -->
        <test-method status="PASS" signature="getNumber()[pri:0, instance:test.CardTest@144fc21]" name="getNumber" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNumber -->
        <test-method status="PASS" signature="getNumber()[pri:0, instance:test.CardTest@14ddd49]" name="getNumber" duration-ms="1" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNumber -->
        <test-method status="PASS" signature="getNumber()[pri:0, instance:test.CardTest@1554b06]" name="getNumber" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNumber -->
        <test-method status="PASS" signature="getNumber()[pri:0, instance:test.CardTest@14e1548]" name="getNumber" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNumber -->
        <test-method status="PASS" signature="getNumber()[pri:0, instance:test.CardTest@16eabae]" name="getNumber" duration-ms="1" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNumber -->
        <test-method status="PASS" signature="getNumber()[pri:0, instance:test.CardTest@1660f4e]" name="getNumber" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNumber -->
        <test-method status="PASS" signature="getNumber()[pri:0, instance:test.CardTest@173813a]" name="getNumber" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNumber -->
        <test-method status="PASS" signature="getNumber()[pri:0, instance:test.CardTest@1855c9a]" name="getNumber" duration-ms="1" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNumber -->
        <test-method status="PASS" signature="getNumber()[pri:0, instance:test.CardTest@17b7b6]" name="getNumber" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNumber -->
        <test-method status="PASS" signature="getNumber()[pri:0, instance:test.CardTest@176b067]" name="getNumber" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNumber -->
        <test-method status="PASS" signature="getNumber()[pri:0, instance:test.CardTest@199d22e]" name="getNumber" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNumber -->
        <test-method status="PASS" signature="getNumber()[pri:0, instance:test.CardTest@1bbf57e]" name="getNumber" duration-ms="1" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNumber -->
        <test-method status="PASS" signature="getNumber()[pri:0, instance:test.CardTest@1bfb90a]" name="getNumber" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNumber -->
        <test-method status="PASS" signature="getNumber()[pri:0, instance:test.CardTest@1be0360]" name="getNumber" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNumber -->
        <test-method status="PASS" signature="getNumber()[pri:0, instance:test.CardTest@1e2203c]" name="getNumber" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNumber -->
        <test-method status="PASS" signature="getNumber()[pri:0, instance:test.CardTest@1d7a715]" name="getNumber" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNumber -->
        <test-method status="PASS" signature="getNumber()[pri:0, instance:test.CardTest@1f13d6e]" name="getNumber" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNumber -->
        <test-method status="PASS" signature="getNumber()[pri:0, instance:test.CardTest@1fc609f]" name="getNumber" duration-ms="1" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNumber -->
        <test-method status="PASS" signature="getNumber()[pri:0, instance:test.CardTest@1faf8f2]" name="getNumber" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNumber -->
        <test-method status="PASS" signature="getNumber()[pri:0, instance:test.CardTest@29daf3]" name="getNumber" duration-ms="1" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNumber -->
        <test-method status="PASS" signature="getNumber()[pri:0, instance:test.CardTest@24f60b]" name="getNumber" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNumber -->
        <test-method status="PASS" signature="getNumber()[pri:0, instance:test.CardTest@2a67b4]" name="getNumber" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNumber -->
        <test-method status="PASS" signature="getNumber()[pri:0, instance:test.CardTest@3a4799]" name="getNumber" duration-ms="1" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNumber -->
        <test-method status="PASS" signature="getNumber()[pri:0, instance:test.CardTest@49835d]" name="getNumber" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNumber -->
        <test-method status="PASS" signature="getNumber()[pri:0, instance:test.CardTest@6c3152]" name="getNumber" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNumber -->
        <test-method status="PASS" signature="getNumber()[pri:0, instance:test.CardTest@6d1014]" name="getNumber" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNumber -->
        <test-method status="PASS" signature="getNumber()[pri:0, instance:test.CardTest@707e36]" name="getNumber" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNumber -->
        <test-method status="PASS" signature="getNumber()[pri:0, instance:test.CardTest@7dc304]" name="getNumber" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNumber -->
        <test-method status="PASS" signature="getNumber()[pri:0, instance:test.CardTest@709393]" name="getNumber" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNumber -->
        <test-method status="PASS" signature="getNumber()[pri:0, instance:test.CardTest@853265]" name="getNumber" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNumber -->
        <test-method status="PASS" signature="getNumber()[pri:0, instance:test.CardTest@8806ef]" name="getNumber" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNumber -->
        <test-method status="PASS" signature="getNumber()[pri:0, instance:test.CardTest@883ce7]" name="getNumber" duration-ms="1" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNumber -->
        <test-method status="PASS" signature="getNumber()[pri:0, instance:test.CardTest@94e528]" name="getNumber" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNumber -->
        <test-method status="PASS" signature="getNumber()[pri:0, instance:test.CardTest@a7e666]" name="getNumber" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNumber -->
        <test-method status="PASS" signature="getNumber()[pri:0, instance:test.CardTest@aa12dd]" name="getNumber" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNumber -->
        <test-method status="PASS" signature="getNumber()[pri:0, instance:test.CardTest@b494a6]" name="getNumber" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNumber -->
        <test-method status="PASS" signature="getNumber()[pri:0, instance:test.CardTest@b8a058]" name="getNumber" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNumber -->
        <test-method status="PASS" signature="getNumber()[pri:0, instance:test.CardTest@b6cbcc]" name="getNumber" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNumber -->
        <test-method status="PASS" signature="getNumber()[pri:0, instance:test.CardTest@bbe345]" name="getNumber" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNumber -->
        <test-method status="PASS" signature="getNumber()[pri:0, instance:test.CardTest@d2dae5]" name="getNumber" duration-ms="1" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNumber -->
        <test-method status="PASS" signature="getNumber()[pri:0, instance:test.CardTest@bc05a6]" name="getNumber" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNumber -->
        <test-method status="PASS" signature="getNumber()[pri:0, instance:test.CardTest@ef309d]" name="getNumber" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNumber -->
        <test-method status="PASS" signature="getNumber()[pri:0, instance:test.CardTest@fed156]" name="getNumber" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getNumber -->
        <test-method status="PASS" signature="getSuit()[pri:0, instance:test.CardTest@10587f1]" name="getSuit" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSuit -->
        <test-method status="PASS" signature="getSuit()[pri:0, instance:test.CardTest@1063c0a]" name="getSuit" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSuit -->
        <test-method status="PASS" signature="getSuit()[pri:0, instance:test.CardTest@11276c2]" name="getSuit" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSuit -->
        <test-method status="PASS" signature="getSuit()[pri:0, instance:test.CardTest@11cdd8a]" name="getSuit" duration-ms="1" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSuit -->
        <test-method status="PASS" signature="getSuit()[pri:0, instance:test.CardTest@1084709]" name="getSuit" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSuit -->
        <test-method status="PASS" signature="getSuit()[pri:0, instance:test.CardTest@11f39f9]" name="getSuit" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSuit -->
        <test-method status="PASS" signature="getSuit()[pri:0, instance:test.CardTest@1205a84]" name="getSuit" duration-ms="1" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSuit -->
        <test-method status="PASS" signature="getSuit()[pri:0, instance:test.CardTest@121e813]" name="getSuit" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSuit -->
        <test-method status="PASS" signature="getSuit()[pri:0, instance:test.CardTest@137fd8f]" name="getSuit" duration-ms="1" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSuit -->
        <test-method status="PASS" signature="getSuit()[pri:0, instance:test.CardTest@14ddd49]" name="getSuit" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSuit -->
        <test-method status="PASS" signature="getSuit()[pri:0, instance:test.CardTest@144fc21]" name="getSuit" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSuit -->
        <test-method status="PASS" signature="getSuit()[pri:0, instance:test.CardTest@14e1548]" name="getSuit" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSuit -->
        <test-method status="PASS" signature="getSuit()[pri:0, instance:test.CardTest@1554b06]" name="getSuit" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSuit -->
        <test-method status="PASS" signature="getSuit()[pri:0, instance:test.CardTest@16eabae]" name="getSuit" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSuit -->
        <test-method status="PASS" signature="getSuit()[pri:0, instance:test.CardTest@173813a]" name="getSuit" duration-ms="1" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSuit -->
        <test-method status="PASS" signature="getSuit()[pri:0, instance:test.CardTest@1660f4e]" name="getSuit" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSuit -->
        <test-method status="PASS" signature="getSuit()[pri:0, instance:test.CardTest@176b067]" name="getSuit" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSuit -->
        <test-method status="PASS" signature="getSuit()[pri:0, instance:test.CardTest@17b7b6]" name="getSuit" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSuit -->
        <test-method status="PASS" signature="getSuit()[pri:0, instance:test.CardTest@1855c9a]" name="getSuit" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSuit -->
        <test-method status="PASS" signature="getSuit()[pri:0, instance:test.CardTest@199d22e]" name="getSuit" duration-ms="9" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSuit -->
        <test-method status="PASS" signature="getSuit()[pri:0, instance:test.CardTest@1bbf57e]" name="getSuit" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSuit -->
        <test-method status="PASS" signature="getSuit()[pri:0, instance:test.CardTest@1be0360]" name="getSuit" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSuit -->
        <test-method status="PASS" signature="getSuit()[pri:0, instance:test.CardTest@1bfb90a]" name="getSuit" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSuit -->
        <test-method status="PASS" signature="getSuit()[pri:0, instance:test.CardTest@1d7a715]" name="getSuit" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSuit -->
        <test-method status="PASS" signature="getSuit()[pri:0, instance:test.CardTest@1e2203c]" name="getSuit" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSuit -->
        <test-method status="PASS" signature="getSuit()[pri:0, instance:test.CardTest@1fc609f]" name="getSuit" duration-ms="1" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSuit -->
        <test-method status="PASS" signature="getSuit()[pri:0, instance:test.CardTest@1faf8f2]" name="getSuit" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSuit -->
        <test-method status="PASS" signature="getSuit()[pri:0, instance:test.CardTest@1f13d6e]" name="getSuit" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSuit -->
        <test-method status="PASS" signature="getSuit()[pri:0, instance:test.CardTest@24f60b]" name="getSuit" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSuit -->
        <test-method status="PASS" signature="getSuit()[pri:0, instance:test.CardTest@29daf3]" name="getSuit" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSuit -->
        <test-method status="PASS" signature="getSuit()[pri:0, instance:test.CardTest@3a4799]" name="getSuit" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSuit -->
        <test-method status="PASS" signature="getSuit()[pri:0, instance:test.CardTest@49835d]" name="getSuit" duration-ms="1" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSuit -->
        <test-method status="PASS" signature="getSuit()[pri:0, instance:test.CardTest@2a67b4]" name="getSuit" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSuit -->
        <test-method status="PASS" signature="getSuit()[pri:0, instance:test.CardTest@6d1014]" name="getSuit" duration-ms="1" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSuit -->
        <test-method status="PASS" signature="getSuit()[pri:0, instance:test.CardTest@6c3152]" name="getSuit" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSuit -->
        <test-method status="PASS" signature="getSuit()[pri:0, instance:test.CardTest@707e36]" name="getSuit" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSuit -->
        <test-method status="PASS" signature="getSuit()[pri:0, instance:test.CardTest@709393]" name="getSuit" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSuit -->
        <test-method status="PASS" signature="getSuit()[pri:0, instance:test.CardTest@7dc304]" name="getSuit" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSuit -->
        <test-method status="PASS" signature="getSuit()[pri:0, instance:test.CardTest@853265]" name="getSuit" duration-ms="1" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSuit -->
        <test-method status="PASS" signature="getSuit()[pri:0, instance:test.CardTest@883ce7]" name="getSuit" duration-ms="1" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSuit -->
        <test-method status="PASS" signature="getSuit()[pri:0, instance:test.CardTest@8806ef]" name="getSuit" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSuit -->
        <test-method status="PASS" signature="getSuit()[pri:0, instance:test.CardTest@94e528]" name="getSuit" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSuit -->
        <test-method status="PASS" signature="getSuit()[pri:0, instance:test.CardTest@a7e666]" name="getSuit" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSuit -->
        <test-method status="PASS" signature="getSuit()[pri:0, instance:test.CardTest@b494a6]" name="getSuit" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSuit -->
        <test-method status="PASS" signature="getSuit()[pri:0, instance:test.CardTest@aa12dd]" name="getSuit" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSuit -->
        <test-method status="PASS" signature="getSuit()[pri:0, instance:test.CardTest@b8a058]" name="getSuit" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSuit -->
        <test-method status="PASS" signature="getSuit()[pri:0, instance:test.CardTest@b6cbcc]" name="getSuit" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSuit -->
        <test-method status="PASS" signature="getSuit()[pri:0, instance:test.CardTest@bbe345]" name="getSuit" duration-ms="1" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSuit -->
        <test-method status="PASS" signature="getSuit()[pri:0, instance:test.CardTest@d2dae5]" name="getSuit" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSuit -->
        <test-method status="PASS" signature="getSuit()[pri:0, instance:test.CardTest@bc05a6]" name="getSuit" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSuit -->
        <test-method status="PASS" signature="getSuit()[pri:0, instance:test.CardTest@ef309d]" name="getSuit" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSuit -->
        <test-method status="PASS" signature="getSuit()[pri:0, instance:test.CardTest@fed156]" name="getSuit" duration-ms="1" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSuit -->
        <test-method status="PASS" signature="isFaceUp()[pri:0, instance:test.CardTest@10587f1]" name="isFaceUp" duration-ms="7" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isFaceUp -->
        <test-method status="PASS" signature="isFaceUp()[pri:0, instance:test.CardTest@1063c0a]" name="isFaceUp" duration-ms="5" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isFaceUp -->
        <test-method status="PASS" signature="isFaceUp()[pri:0, instance:test.CardTest@1084709]" name="isFaceUp" duration-ms="6" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isFaceUp -->
        <test-method status="PASS" signature="isFaceUp()[pri:0, instance:test.CardTest@11276c2]" name="isFaceUp" duration-ms="6" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isFaceUp -->
        <test-method status="PASS" signature="isFaceUp()[pri:0, instance:test.CardTest@11cdd8a]" name="isFaceUp" duration-ms="5" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isFaceUp -->
        <test-method status="PASS" signature="isFaceUp()[pri:0, instance:test.CardTest@11f39f9]" name="isFaceUp" duration-ms="5" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isFaceUp -->
        <test-method status="PASS" signature="isFaceUp()[pri:0, instance:test.CardTest@1205a84]" name="isFaceUp" duration-ms="5" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isFaceUp -->
        <test-method status="PASS" signature="isFaceUp()[pri:0, instance:test.CardTest@121e813]" name="isFaceUp" duration-ms="5" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isFaceUp -->
        <test-method status="PASS" signature="isFaceUp()[pri:0, instance:test.CardTest@137fd8f]" name="isFaceUp" duration-ms="5" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isFaceUp -->
        <test-method status="PASS" signature="isFaceUp()[pri:0, instance:test.CardTest@144fc21]" name="isFaceUp" duration-ms="6" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isFaceUp -->
        <test-method status="PASS" signature="isFaceUp()[pri:0, instance:test.CardTest@14ddd49]" name="isFaceUp" duration-ms="5" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isFaceUp -->
        <test-method status="PASS" signature="isFaceUp()[pri:0, instance:test.CardTest@14e1548]" name="isFaceUp" duration-ms="5" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isFaceUp -->
        <test-method status="PASS" signature="isFaceUp()[pri:0, instance:test.CardTest@1554b06]" name="isFaceUp" duration-ms="6" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isFaceUp -->
        <test-method status="PASS" signature="isFaceUp()[pri:0, instance:test.CardTest@1660f4e]" name="isFaceUp" duration-ms="5" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isFaceUp -->
        <test-method status="PASS" signature="isFaceUp()[pri:0, instance:test.CardTest@16eabae]" name="isFaceUp" duration-ms="5" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isFaceUp -->
        <test-method status="PASS" signature="isFaceUp()[pri:0, instance:test.CardTest@173813a]" name="isFaceUp" duration-ms="6" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isFaceUp -->
        <test-method status="PASS" signature="isFaceUp()[pri:0, instance:test.CardTest@176b067]" name="isFaceUp" duration-ms="6" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isFaceUp -->
        <test-method status="PASS" signature="isFaceUp()[pri:0, instance:test.CardTest@17b7b6]" name="isFaceUp" duration-ms="6" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isFaceUp -->
        <test-method status="PASS" signature="isFaceUp()[pri:0, instance:test.CardTest@1855c9a]" name="isFaceUp" duration-ms="6" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isFaceUp -->
        <test-method status="PASS" signature="isFaceUp()[pri:0, instance:test.CardTest@199d22e]" name="isFaceUp" duration-ms="6" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isFaceUp -->
        <test-method status="PASS" signature="isFaceUp()[pri:0, instance:test.CardTest@1bbf57e]" name="isFaceUp" duration-ms="5" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isFaceUp -->
        <test-method status="PASS" signature="isFaceUp()[pri:0, instance:test.CardTest@1be0360]" name="isFaceUp" duration-ms="5" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isFaceUp -->
        <test-method status="PASS" signature="isFaceUp()[pri:0, instance:test.CardTest@1bfb90a]" name="isFaceUp" duration-ms="7" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isFaceUp -->
        <test-method status="PASS" signature="isFaceUp()[pri:0, instance:test.CardTest@1d7a715]" name="isFaceUp" duration-ms="7" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isFaceUp -->
        <test-method status="PASS" signature="isFaceUp()[pri:0, instance:test.CardTest@1e2203c]" name="isFaceUp" duration-ms="6" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isFaceUp -->
        <test-method status="PASS" signature="isFaceUp()[pri:0, instance:test.CardTest@1f13d6e]" name="isFaceUp" duration-ms="5" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isFaceUp -->
        <test-method status="PASS" signature="isFaceUp()[pri:0, instance:test.CardTest@1faf8f2]" name="isFaceUp" duration-ms="6" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isFaceUp -->
        <test-method status="PASS" signature="isFaceUp()[pri:0, instance:test.CardTest@1fc609f]" name="isFaceUp" duration-ms="6" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isFaceUp -->
        <test-method status="PASS" signature="isFaceUp()[pri:0, instance:test.CardTest@24f60b]" name="isFaceUp" duration-ms="6" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isFaceUp -->
        <test-method status="PASS" signature="isFaceUp()[pri:0, instance:test.CardTest@29daf3]" name="isFaceUp" duration-ms="6" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isFaceUp -->
        <test-method status="PASS" signature="isFaceUp()[pri:0, instance:test.CardTest@2a67b4]" name="isFaceUp" duration-ms="5" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isFaceUp -->
        <test-method status="PASS" signature="isFaceUp()[pri:0, instance:test.CardTest@3a4799]" name="isFaceUp" duration-ms="5" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isFaceUp -->
        <test-method status="PASS" signature="isFaceUp()[pri:0, instance:test.CardTest@49835d]" name="isFaceUp" duration-ms="5" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isFaceUp -->
        <test-method status="PASS" signature="isFaceUp()[pri:0, instance:test.CardTest@6c3152]" name="isFaceUp" duration-ms="6" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isFaceUp -->
        <test-method status="PASS" signature="isFaceUp()[pri:0, instance:test.CardTest@6d1014]" name="isFaceUp" duration-ms="6" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isFaceUp -->
        <test-method status="PASS" signature="isFaceUp()[pri:0, instance:test.CardTest@707e36]" name="isFaceUp" duration-ms="5" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isFaceUp -->
        <test-method status="PASS" signature="isFaceUp()[pri:0, instance:test.CardTest@709393]" name="isFaceUp" duration-ms="6" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isFaceUp -->
        <test-method status="PASS" signature="isFaceUp()[pri:0, instance:test.CardTest@7dc304]" name="isFaceUp" duration-ms="5" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isFaceUp -->
        <test-method status="PASS" signature="isFaceUp()[pri:0, instance:test.CardTest@853265]" name="isFaceUp" duration-ms="5" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isFaceUp -->
        <test-method status="PASS" signature="isFaceUp()[pri:0, instance:test.CardTest@8806ef]" name="isFaceUp" duration-ms="6" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isFaceUp -->
        <test-method status="PASS" signature="isFaceUp()[pri:0, instance:test.CardTest@883ce7]" name="isFaceUp" duration-ms="5" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isFaceUp -->
        <test-method status="PASS" signature="isFaceUp()[pri:0, instance:test.CardTest@94e528]" name="isFaceUp" duration-ms="5" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isFaceUp -->
        <test-method status="PASS" signature="isFaceUp()[pri:0, instance:test.CardTest@a7e666]" name="isFaceUp" duration-ms="7" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isFaceUp -->
        <test-method status="PASS" signature="isFaceUp()[pri:0, instance:test.CardTest@aa12dd]" name="isFaceUp" duration-ms="6" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isFaceUp -->
        <test-method status="PASS" signature="isFaceUp()[pri:0, instance:test.CardTest@b494a6]" name="isFaceUp" duration-ms="5" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isFaceUp -->
        <test-method status="PASS" signature="isFaceUp()[pri:0, instance:test.CardTest@b6cbcc]" name="isFaceUp" duration-ms="6" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isFaceUp -->
        <test-method status="PASS" signature="isFaceUp()[pri:0, instance:test.CardTest@b8a058]" name="isFaceUp" duration-ms="5" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isFaceUp -->
        <test-method status="PASS" signature="isFaceUp()[pri:0, instance:test.CardTest@bbe345]" name="isFaceUp" duration-ms="5" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isFaceUp -->
        <test-method status="PASS" signature="isFaceUp()[pri:0, instance:test.CardTest@bc05a6]" name="isFaceUp" duration-ms="5" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isFaceUp -->
        <test-method status="PASS" signature="isFaceUp()[pri:0, instance:test.CardTest@d2dae5]" name="isFaceUp" duration-ms="6" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isFaceUp -->
        <test-method status="PASS" signature="isFaceUp()[pri:0, instance:test.CardTest@ef309d]" name="isFaceUp" duration-ms="6" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isFaceUp -->
        <test-method status="PASS" signature="isFaceUp()[pri:0, instance:test.CardTest@fed156]" name="isFaceUp" duration-ms="5" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isFaceUp -->
        <test-method status="PASS" signature="isHighlighted()[pri:0, instance:test.CardTest@10587f1]" name="isHighlighted" duration-ms="6" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isHighlighted -->
        <test-method status="PASS" signature="isHighlighted()[pri:0, instance:test.CardTest@1063c0a]" name="isHighlighted" duration-ms="6" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isHighlighted -->
        <test-method status="PASS" signature="isHighlighted()[pri:0, instance:test.CardTest@1084709]" name="isHighlighted" duration-ms="5" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isHighlighted -->
        <test-method status="PASS" signature="isHighlighted()[pri:0, instance:test.CardTest@11276c2]" name="isHighlighted" duration-ms="5" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isHighlighted -->
        <test-method status="PASS" signature="isHighlighted()[pri:0, instance:test.CardTest@11cdd8a]" name="isHighlighted" duration-ms="5" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isHighlighted -->
        <test-method status="PASS" signature="isHighlighted()[pri:0, instance:test.CardTest@11f39f9]" name="isHighlighted" duration-ms="6" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isHighlighted -->
        <test-method status="PASS" signature="isHighlighted()[pri:0, instance:test.CardTest@1205a84]" name="isHighlighted" duration-ms="5" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isHighlighted -->
        <test-method status="PASS" signature="isHighlighted()[pri:0, instance:test.CardTest@121e813]" name="isHighlighted" duration-ms="5" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isHighlighted -->
        <test-method status="PASS" signature="isHighlighted()[pri:0, instance:test.CardTest@137fd8f]" name="isHighlighted" duration-ms="6" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isHighlighted -->
        <test-method status="PASS" signature="isHighlighted()[pri:0, instance:test.CardTest@144fc21]" name="isHighlighted" duration-ms="6" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isHighlighted -->
        <test-method status="PASS" signature="isHighlighted()[pri:0, instance:test.CardTest@14ddd49]" name="isHighlighted" duration-ms="5" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isHighlighted -->
        <test-method status="PASS" signature="isHighlighted()[pri:0, instance:test.CardTest@14e1548]" name="isHighlighted" duration-ms="5" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isHighlighted -->
        <test-method status="PASS" signature="isHighlighted()[pri:0, instance:test.CardTest@1554b06]" name="isHighlighted" duration-ms="6" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isHighlighted -->
        <test-method status="PASS" signature="isHighlighted()[pri:0, instance:test.CardTest@1660f4e]" name="isHighlighted" duration-ms="5" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isHighlighted -->
        <test-method status="PASS" signature="isHighlighted()[pri:0, instance:test.CardTest@16eabae]" name="isHighlighted" duration-ms="5" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isHighlighted -->
        <test-method status="PASS" signature="isHighlighted()[pri:0, instance:test.CardTest@173813a]" name="isHighlighted" duration-ms="6" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isHighlighted -->
        <test-method status="PASS" signature="isHighlighted()[pri:0, instance:test.CardTest@176b067]" name="isHighlighted" duration-ms="6" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isHighlighted -->
        <test-method status="PASS" signature="isHighlighted()[pri:0, instance:test.CardTest@17b7b6]" name="isHighlighted" duration-ms="5" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isHighlighted -->
        <test-method status="PASS" signature="isHighlighted()[pri:0, instance:test.CardTest@1855c9a]" name="isHighlighted" duration-ms="6" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isHighlighted -->
        <test-method status="PASS" signature="isHighlighted()[pri:0, instance:test.CardTest@199d22e]" name="isHighlighted" duration-ms="6" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isHighlighted -->
        <test-method status="PASS" signature="isHighlighted()[pri:0, instance:test.CardTest@1bbf57e]" name="isHighlighted" duration-ms="6" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isHighlighted -->
        <test-method status="PASS" signature="isHighlighted()[pri:0, instance:test.CardTest@1be0360]" name="isHighlighted" duration-ms="6" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isHighlighted -->
        <test-method status="PASS" signature="isHighlighted()[pri:0, instance:test.CardTest@1bfb90a]" name="isHighlighted" duration-ms="5" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isHighlighted -->
        <test-method status="PASS" signature="isHighlighted()[pri:0, instance:test.CardTest@1d7a715]" name="isHighlighted" duration-ms="5" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isHighlighted -->
        <test-method status="PASS" signature="isHighlighted()[pri:0, instance:test.CardTest@1e2203c]" name="isHighlighted" duration-ms="5" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isHighlighted -->
        <test-method status="PASS" signature="isHighlighted()[pri:0, instance:test.CardTest@1f13d6e]" name="isHighlighted" duration-ms="5" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isHighlighted -->
        <test-method status="PASS" signature="isHighlighted()[pri:0, instance:test.CardTest@1faf8f2]" name="isHighlighted" duration-ms="5" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isHighlighted -->
        <test-method status="PASS" signature="isHighlighted()[pri:0, instance:test.CardTest@1fc609f]" name="isHighlighted" duration-ms="5" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isHighlighted -->
        <test-method status="PASS" signature="isHighlighted()[pri:0, instance:test.CardTest@24f60b]" name="isHighlighted" duration-ms="5" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isHighlighted -->
        <test-method status="PASS" signature="isHighlighted()[pri:0, instance:test.CardTest@29daf3]" name="isHighlighted" duration-ms="5" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isHighlighted -->
        <test-method status="PASS" signature="isHighlighted()[pri:0, instance:test.CardTest@2a67b4]" name="isHighlighted" duration-ms="5" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isHighlighted -->
        <test-method status="PASS" signature="isHighlighted()[pri:0, instance:test.CardTest@3a4799]" name="isHighlighted" duration-ms="7" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isHighlighted -->
        <test-method status="PASS" signature="isHighlighted()[pri:0, instance:test.CardTest@49835d]" name="isHighlighted" duration-ms="5" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isHighlighted -->
        <test-method status="PASS" signature="isHighlighted()[pri:0, instance:test.CardTest@6c3152]" name="isHighlighted" duration-ms="6" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isHighlighted -->
        <test-method status="PASS" signature="isHighlighted()[pri:0, instance:test.CardTest@6d1014]" name="isHighlighted" duration-ms="5" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isHighlighted -->
        <test-method status="PASS" signature="isHighlighted()[pri:0, instance:test.CardTest@707e36]" name="isHighlighted" duration-ms="5" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isHighlighted -->
        <test-method status="PASS" signature="isHighlighted()[pri:0, instance:test.CardTest@709393]" name="isHighlighted" duration-ms="6" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isHighlighted -->
        <test-method status="PASS" signature="isHighlighted()[pri:0, instance:test.CardTest@7dc304]" name="isHighlighted" duration-ms="5" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isHighlighted -->
        <test-method status="PASS" signature="isHighlighted()[pri:0, instance:test.CardTest@853265]" name="isHighlighted" duration-ms="5" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isHighlighted -->
        <test-method status="PASS" signature="isHighlighted()[pri:0, instance:test.CardTest@8806ef]" name="isHighlighted" duration-ms="5" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isHighlighted -->
        <test-method status="PASS" signature="isHighlighted()[pri:0, instance:test.CardTest@883ce7]" name="isHighlighted" duration-ms="5" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isHighlighted -->
        <test-method status="PASS" signature="isHighlighted()[pri:0, instance:test.CardTest@94e528]" name="isHighlighted" duration-ms="5" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isHighlighted -->
        <test-method status="PASS" signature="isHighlighted()[pri:0, instance:test.CardTest@a7e666]" name="isHighlighted" duration-ms="6" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isHighlighted -->
        <test-method status="PASS" signature="isHighlighted()[pri:0, instance:test.CardTest@aa12dd]" name="isHighlighted" duration-ms="5" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isHighlighted -->
        <test-method status="PASS" signature="isHighlighted()[pri:0, instance:test.CardTest@b494a6]" name="isHighlighted" duration-ms="6" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isHighlighted -->
        <test-method status="PASS" signature="isHighlighted()[pri:0, instance:test.CardTest@b6cbcc]" name="isHighlighted" duration-ms="5" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isHighlighted -->
        <test-method status="PASS" signature="isHighlighted()[pri:0, instance:test.CardTest@b8a058]" name="isHighlighted" duration-ms="6" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isHighlighted -->
        <test-method status="PASS" signature="isHighlighted()[pri:0, instance:test.CardTest@bbe345]" name="isHighlighted" duration-ms="6" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isHighlighted -->
        <test-method status="PASS" signature="isHighlighted()[pri:0, instance:test.CardTest@bc05a6]" name="isHighlighted" duration-ms="6" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isHighlighted -->
        <test-method status="PASS" signature="isHighlighted()[pri:0, instance:test.CardTest@d2dae5]" name="isHighlighted" duration-ms="6" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isHighlighted -->
        <test-method status="PASS" signature="isHighlighted()[pri:0, instance:test.CardTest@ef309d]" name="isHighlighted" duration-ms="6" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isHighlighted -->
        <test-method status="PASS" signature="isHighlighted()[pri:0, instance:test.CardTest@fed156]" name="isHighlighted" duration-ms="5" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isHighlighted -->
        <test-method status="PASS" signature="isValidSuit()[pri:0, instance:test.CardTest@10587f1]" name="isValidSuit" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isValidSuit -->
        <test-method status="PASS" signature="isValidSuit()[pri:0, instance:test.CardTest@1063c0a]" name="isValidSuit" duration-ms="1" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isValidSuit -->
        <test-method status="PASS" signature="isValidSuit()[pri:0, instance:test.CardTest@1084709]" name="isValidSuit" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isValidSuit -->
        <test-method status="PASS" signature="isValidSuit()[pri:0, instance:test.CardTest@11276c2]" name="isValidSuit" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isValidSuit -->
        <test-method status="PASS" signature="isValidSuit()[pri:0, instance:test.CardTest@11f39f9]" name="isValidSuit" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isValidSuit -->
        <test-method status="PASS" signature="isValidSuit()[pri:0, instance:test.CardTest@11cdd8a]" name="isValidSuit" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isValidSuit -->
        <test-method status="PASS" signature="isValidSuit()[pri:0, instance:test.CardTest@137fd8f]" name="isValidSuit" duration-ms="1" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isValidSuit -->
        <test-method status="PASS" signature="isValidSuit()[pri:0, instance:test.CardTest@121e813]" name="isValidSuit" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isValidSuit -->
        <test-method status="PASS" signature="isValidSuit()[pri:0, instance:test.CardTest@1205a84]" name="isValidSuit" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isValidSuit -->
        <test-method status="PASS" signature="isValidSuit()[pri:0, instance:test.CardTest@14ddd49]" name="isValidSuit" duration-ms="1" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isValidSuit -->
        <test-method status="PASS" signature="isValidSuit()[pri:0, instance:test.CardTest@144fc21]" name="isValidSuit" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isValidSuit -->
        <test-method status="PASS" signature="isValidSuit()[pri:0, instance:test.CardTest@1554b06]" name="isValidSuit" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isValidSuit -->
        <test-method status="PASS" signature="isValidSuit()[pri:0, instance:test.CardTest@14e1548]" name="isValidSuit" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isValidSuit -->
        <test-method status="PASS" signature="isValidSuit()[pri:0, instance:test.CardTest@16eabae]" name="isValidSuit" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isValidSuit -->
        <test-method status="PASS" signature="isValidSuit()[pri:0, instance:test.CardTest@1660f4e]" name="isValidSuit" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isValidSuit -->
        <test-method status="PASS" signature="isValidSuit()[pri:0, instance:test.CardTest@173813a]" name="isValidSuit" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isValidSuit -->
        <test-method status="PASS" signature="isValidSuit()[pri:0, instance:test.CardTest@176b067]" name="isValidSuit" duration-ms="1" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isValidSuit -->
        <test-method status="PASS" signature="isValidSuit()[pri:0, instance:test.CardTest@1855c9a]" name="isValidSuit" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isValidSuit -->
        <test-method status="PASS" signature="isValidSuit()[pri:0, instance:test.CardTest@17b7b6]" name="isValidSuit" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isValidSuit -->
        <test-method status="PASS" signature="isValidSuit()[pri:0, instance:test.CardTest@199d22e]" name="isValidSuit" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isValidSuit -->
        <test-method status="PASS" signature="isValidSuit()[pri:0, instance:test.CardTest@1bbf57e]" name="isValidSuit" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isValidSuit -->
        <test-method status="PASS" signature="isValidSuit()[pri:0, instance:test.CardTest@1be0360]" name="isValidSuit" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isValidSuit -->
        <test-method status="PASS" signature="isValidSuit()[pri:0, instance:test.CardTest@1bfb90a]" name="isValidSuit" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isValidSuit -->
        <test-method status="PASS" signature="isValidSuit()[pri:0, instance:test.CardTest@1e2203c]" name="isValidSuit" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isValidSuit -->
        <test-method status="PASS" signature="isValidSuit()[pri:0, instance:test.CardTest@1f13d6e]" name="isValidSuit" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isValidSuit -->
        <test-method status="PASS" signature="isValidSuit()[pri:0, instance:test.CardTest@1d7a715]" name="isValidSuit" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isValidSuit -->
        <test-method status="PASS" signature="isValidSuit()[pri:0, instance:test.CardTest@1faf8f2]" name="isValidSuit" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isValidSuit -->
        <test-method status="PASS" signature="isValidSuit()[pri:0, instance:test.CardTest@1fc609f]" name="isValidSuit" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isValidSuit -->
        <test-method status="PASS" signature="isValidSuit()[pri:0, instance:test.CardTest@29daf3]" name="isValidSuit" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isValidSuit -->
        <test-method status="PASS" signature="isValidSuit()[pri:0, instance:test.CardTest@24f60b]" name="isValidSuit" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isValidSuit -->
        <test-method status="PASS" signature="isValidSuit()[pri:0, instance:test.CardTest@49835d]" name="isValidSuit" duration-ms="1" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isValidSuit -->
        <test-method status="PASS" signature="isValidSuit()[pri:0, instance:test.CardTest@3a4799]" name="isValidSuit" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isValidSuit -->
        <test-method status="PASS" signature="isValidSuit()[pri:0, instance:test.CardTest@2a67b4]" name="isValidSuit" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isValidSuit -->
        <test-method status="PASS" signature="isValidSuit()[pri:0, instance:test.CardTest@6d1014]" name="isValidSuit" duration-ms="1" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isValidSuit -->
        <test-method status="PASS" signature="isValidSuit()[pri:0, instance:test.CardTest@6c3152]" name="isValidSuit" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isValidSuit -->
        <test-method status="PASS" signature="isValidSuit()[pri:0, instance:test.CardTest@709393]" name="isValidSuit" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isValidSuit -->
        <test-method status="PASS" signature="isValidSuit()[pri:0, instance:test.CardTest@707e36]" name="isValidSuit" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isValidSuit -->
        <test-method status="PASS" signature="isValidSuit()[pri:0, instance:test.CardTest@8806ef]" name="isValidSuit" duration-ms="1" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isValidSuit -->
        <test-method status="PASS" signature="isValidSuit()[pri:0, instance:test.CardTest@853265]" name="isValidSuit" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isValidSuit -->
        <test-method status="PASS" signature="isValidSuit()[pri:0, instance:test.CardTest@7dc304]" name="isValidSuit" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isValidSuit -->
        <test-method status="PASS" signature="isValidSuit()[pri:0, instance:test.CardTest@883ce7]" name="isValidSuit" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isValidSuit -->
        <test-method status="PASS" signature="isValidSuit()[pri:0, instance:test.CardTest@94e528]" name="isValidSuit" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isValidSuit -->
        <test-method status="PASS" signature="isValidSuit()[pri:0, instance:test.CardTest@a7e666]" name="isValidSuit" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isValidSuit -->
        <test-method status="PASS" signature="isValidSuit()[pri:0, instance:test.CardTest@b494a6]" name="isValidSuit" duration-ms="1" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isValidSuit -->
        <test-method status="PASS" signature="isValidSuit()[pri:0, instance:test.CardTest@aa12dd]" name="isValidSuit" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isValidSuit -->
        <test-method status="PASS" signature="isValidSuit()[pri:0, instance:test.CardTest@b6cbcc]" name="isValidSuit" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isValidSuit -->
        <test-method status="PASS" signature="isValidSuit()[pri:0, instance:test.CardTest@b8a058]" name="isValidSuit" duration-ms="1" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isValidSuit -->
        <test-method status="PASS" signature="isValidSuit()[pri:0, instance:test.CardTest@bc05a6]" name="isValidSuit" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isValidSuit -->
        <test-method status="PASS" signature="isValidSuit()[pri:0, instance:test.CardTest@bbe345]" name="isValidSuit" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isValidSuit -->
        <test-method status="PASS" signature="isValidSuit()[pri:0, instance:test.CardTest@ef309d]" name="isValidSuit" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isValidSuit -->
        <test-method status="PASS" signature="isValidSuit()[pri:0, instance:test.CardTest@d2dae5]" name="isValidSuit" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isValidSuit -->
        <test-method status="PASS" signature="isValidSuit()[pri:0, instance:test.CardTest@fed156]" name="isValidSuit" duration-ms="0" started-at="2017-04-13T00:29:13Z" finished-at="2017-04-13T00:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isValidSuit -->
      </class> <!-- test.CardTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
